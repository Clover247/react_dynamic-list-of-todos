{"version":3,"sources":["api.ts","types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Filter","TodoList","todos","selectedTodo","selectNewTodo","className","map","todo","id","title","completed","isSelectedTodo","cn","type","onClick","TodoFilter","setNewQuery","setNewFilter","query","filter","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","useState","user","setUser","isLoading","setIsLoading","errorMessage","setErrorMessage","useEffect","userId","userFromServer","catch","newError","message","finally","href","name","App","todosFromServer","setTodosFromServer","setSelectedTodo","all","setFilter","setQuery","filteredTodo","param","filteredTodos","toLocaleLowerCase","includes","getFilteredTodos","newQuery","toLowerCase","newFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3129ac79.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Filter {\n  all = 'all',\n  completed = 'completed',\n  active = 'active',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  selectNewTodo(selectedTodo: Todo): void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  selectNewTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          title,\n          completed,\n        } = todo;\n\n        const isSelectedTodo = selectedTodo?.id === id;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={cn({ 'has-background-info-light': isSelectedTodo })}\n            key={id}\n          >\n            <td className=\"is-vcentered\">\n              {id}\n            </td>\n            <td className=\"is-vcentered\">\n              {completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn(\n                {\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                },\n              )}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectNewTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn(\n                    'far',\n                    {\n                      'fa-eye-slash': isSelectedTodo,\n                      'fa-eye': !isSelectedTodo,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  setNewQuery(newQuery: string): void;\n  setNewFilter(newFilter: string): void;\n  query: string;\n  filter: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setNewQuery,\n  setNewFilter,\n  query,\n  filter,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          value={filter}\n          data-cy=\"statusSelect\"\n          onChange={event => setNewFilter(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => setNewQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query\n       && (\n         <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n           {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n           <button\n             data-cy=\"clearSearchButton\"\n             type=\"button\"\n             className=\"delete\"\n             onClick={() => setNewQuery('')}\n           />\n         </span>\n       )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  selectNewTodo(todo: null): void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, selectNewTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(userFromServer => {\n          setUser(userFromServer);\n        })\n        .catch(newError => setErrorMessage(newError.message))\n        .finally(() => setIsLoading(false));\n    } else {\n      setErrorMessage('No selected todo');\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && !user\n        && <Loader />}\n      {!isLoading && !errorMessage && selectedTodo && user\n        && (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => selectNewTodo(null)}\n                data-cy=\"modal-close\"\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong\n                  className={selectedTodo.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'}\n                >\n                  {selectedTodo.completed\n                    ? 'Done'\n                    : 'Planned'}\n                </strong>\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\">\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\n\nconst getFilteredTodos = (\n  param: string,\n  query: string,\n  todos: Todo[],\n) => {\n  let filteredTodos = [...todos];\n\n  if (param === 'active') {\n    filteredTodos = filteredTodos.filter(todo => !todo.completed);\n  } else if (param === 'completed') {\n    filteredTodos = filteredTodos.filter(todo => todo.completed);\n  }\n\n  if (query) {\n    filteredTodos = filteredTodos\n      .filter(todo => todo.title.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase()));\n  }\n\n  return filteredTodos;\n};\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<Filter>(Filter.all);\n  const [query, setQuery] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(todos => setTodosFromServer(todos))\n      .catch(newError => setErrorMessage(newError.message))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const filteredTodo = getFilteredTodos(filter, query, todosFromServer);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setNewQuery={newQuery => setQuery(newQuery.toLowerCase())}\n                setNewFilter={newFilter => setFilter(newFilter as Filter)}\n                query={query}\n                filter={filter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                  && <Loader />}\n              {!isLoading && !errorMessage\n                && (\n                  <TodoList\n                    todos={filteredTodo}\n                    selectedTodo={selectedTodo}\n                    selectNewTodo={todo => setSelectedTodo(todo)}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n        && (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            selectNewTodo={todo => setSelectedTodo(todo)}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}